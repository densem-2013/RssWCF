//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("RssModel", "FK_News_Feeds", "Feeds", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RssWCF.Web.Feed), "News", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RssWCF.Web.News), true)]

#endregion

namespace RssWCF.Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class RssEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект RssEntities, используя строку соединения из раздела "RssEntities" файла конфигурации приложения.
        /// </summary>
        public RssEntities() : base("name=RssEntities", "RssEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта RssEntities.
        /// </summary>
        public RssEntities(string connectionString) : base(connectionString, "RssEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта RssEntities.
        /// </summary>
        public RssEntities(EntityConnection connection) : base(connection, "RssEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Feed> Feeds
        {
            get
            {
                if ((_Feeds == null))
                {
                    _Feeds = base.CreateObjectSet<Feed>("Feeds");
                }
                return _Feeds;
            }
        }
        private ObjectSet<Feed> _Feeds;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Feed. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFeeds(Feed feeds)
        {
            base.AddObject("Feeds", feeds);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet News. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RssModel", Name="Feeds")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feed : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Feed.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="uRL">Исходное значение свойства URL.</param>
        /// <param name="lastTimeUpdate">Исходное значение свойства LastTimeUpdate.</param>
        public static Feed CreateFeeds(global::System.Guid id, global::System.String name, global::System.String uRL, global::System.DateTime lastTimeUpdate)
        {
            Feed feeds = new Feed();
            feeds.ID = id;
            feeds.Name = name;
            feeds.URL = uRL;
            feeds.LastTimeUpdate = lastTimeUpdate;
            return feeds;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastTimeUpdate
        {
            get
            {
                return _LastTimeUpdate;
            }
            set
            {
                OnLastTimeUpdateChanging(value);
                ReportPropertyChanging("LastTimeUpdate");
                _LastTimeUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastTimeUpdate");
                OnLastTimeUpdateChanged();
            }
        }
        private global::System.DateTime _LastTimeUpdate;
        partial void OnLastTimeUpdateChanging(global::System.DateTime value);
        partial void OnLastTimeUpdateChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RssModel", "FK_News_Feeds", "News")]
        public EntityCollection<News> News
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<News>("RssModel.FK_News_Feeds", "News");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<News>("RssModel.FK_News_Feeds", "News", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RssModel", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта News.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="content">Исходное значение свойства Content.</param>
        /// <param name="feedId">Исходное значение свойства FeedId.</param>
        /// <param name="sourceLink">Исходное значение свойства SourceLink.</param>
        public static News CreateNews(global::System.Guid id, global::System.String title, global::System.String content, global::System.Guid feedId, global::System.String sourceLink)
        {
            News news = new News();
            news.ID = id;
            news.Title = title;
            news.Content = content;
            news.FeedId = feedId;
            news.SourceLink = sourceLink;
            return news;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FeedId
        {
            get
            {
                return _FeedId;
            }
            set
            {
                OnFeedIdChanging(value);
                ReportPropertyChanging("FeedId");
                _FeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedId");
                OnFeedIdChanged();
            }
        }
        private global::System.Guid _FeedId;
        partial void OnFeedIdChanging(global::System.Guid value);
        partial void OnFeedIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceLink
        {
            get
            {
                return _SourceLink;
            }
            set
            {
                OnSourceLinkChanging(value);
                ReportPropertyChanging("SourceLink");
                _SourceLink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceLink");
                OnSourceLinkChanged();
            }
        }
        private global::System.String _SourceLink;
        partial void OnSourceLinkChanging(global::System.String value);
        partial void OnSourceLinkChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RssModel", "FK_News_Feeds", "Feeds")]
        public Feed Feeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feed>("RssModel.FK_News_Feeds", "Feeds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feed>("RssModel.FK_News_Feeds", "Feeds").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Feed> FeedsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feed>("RssModel.FK_News_Feeds", "Feeds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Feed>("RssModel.FK_News_Feeds", "Feeds", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
