//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace RssWCF.RssServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feed", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web", IsReference=true)]
    public partial class Feed : RssWCF.RssServiceReference.EntityObject {
        
        private System.Guid IDField;
        
        private System.DateTime LastTimeUpdateField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.News> NewsField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastTimeUpdate {
            get {
                return this.LastTimeUpdateField;
            }
            set {
                if ((this.LastTimeUpdateField.Equals(value) != true)) {
                    this.LastTimeUpdateField = value;
                    this.RaisePropertyChanged("LastTimeUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.News> News {
            get {
                return this.NewsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsField, value) != true)) {
                    this.NewsField = value;
                    this.RaisePropertyChanged("News");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.News))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.Feed))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.News))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.Feed))]
    public partial class EntityObject : RssWCF.RssServiceReference.StructuralObject {
        
        private RssWCF.RssServiceReference.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RssWCF.RssServiceReference.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web", IsReference=true)]
    public partial class News : RssWCF.RssServiceReference.EntityObject {
        
        private string ContentField;
        
        private System.Guid FeedIdField;
        
        private RssWCF.RssServiceReference.Feed FeedsField;
        
        private RssWCF.RssServiceReference.EntityReferenceOfFeedhtKmpHOL FeedsReferenceField;
        
        private System.Guid IDField;
        
        private string SourceLinkField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FeedId {
            get {
                return this.FeedIdField;
            }
            set {
                if ((this.FeedIdField.Equals(value) != true)) {
                    this.FeedIdField = value;
                    this.RaisePropertyChanged("FeedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RssWCF.RssServiceReference.Feed Feeds {
            get {
                return this.FeedsField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedsField, value) != true)) {
                    this.FeedsField = value;
                    this.RaisePropertyChanged("Feeds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RssWCF.RssServiceReference.EntityReferenceOfFeedhtKmpHOL FeedsReference {
            get {
                return this.FeedsReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedsReferenceField, value) != true)) {
                    this.FeedsReferenceField = value;
                    this.RaisePropertyChanged("FeedsReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceLink {
            get {
                return this.SourceLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceLinkField, value) != true)) {
                    this.SourceLinkField = value;
                    this.RaisePropertyChanged("SourceLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.Feed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.News>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.News))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityReferenceOfFeedhtKmpHOL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.RelatedEnd))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.EntityKeyMember>))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
    public partial class DBRequestFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FaultMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaultMessage {
            get {
                return this.FaultMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageField, value) != true)) {
                    this.FaultMessageField = value;
                    this.RaisePropertyChanged("FaultMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReferenceOfFeedhtKmpHOL", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    public partial class EntityReferenceOfFeedhtKmpHOL : RssWCF.RssServiceReference.EntityReference {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityReference", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityReferenceOfFeedhtKmpHOL))]
    public partial class EntityReference : RssWCF.RssServiceReference.RelatedEnd {
        
        private RssWCF.RssServiceReference.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RssWCF.RssServiceReference.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedEnd", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityReference))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(RssWCF.RssServiceReference.EntityReferenceOfFeedhtKmpHOL))]
    public partial class RelatedEnd : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="RssServiceReference.IRssService")]
    public interface IRssService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/GetFeeds", ReplyAction="urn:IRssService/GetFeedsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/GetFeedsDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginGetFeeds(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> EndGetFeeds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/AddFeed", ReplyAction="urn:IRssService/AddFeedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/AddFeedDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginAddFeed(string name, string url, System.AsyncCallback callback, object asyncState);
        
        void EndAddFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/RemoveFeed", ReplyAction="urn:IRssService/RemoveFeedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/RemoveFeedDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginRemoveFeed(System.Guid feed_id, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/FetchAllFeedNews", ReplyAction="urn:IRssService/FetchAllFeedNewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/FetchAllFeedNewsDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginFetchAllFeedNews(System.AsyncCallback callback, object asyncState);
        
        void EndFetchAllFeedNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/GetNews", ReplyAction="urn:IRssService/GetNewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/GetNewsDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginGetNews(System.AsyncCallback callback, object asyncState);
        
        bool EndGetNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/RemoveNews", ReplyAction="urn:IRssService/RemoveNewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/RemoveNewsDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginRemoveNews(System.Guid item_id, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveNews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:IRssService/RemoveAllNews", ReplyAction="urn:IRssService/RemoveAllNewsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RssWCF.RssServiceReference.DBRequestFault), Action="urn:IRssService/RemoveAllNewsDBRequestFaultFault", Name="DBRequestFault", Namespace="http://schemas.datacontract.org/2004/07/RssWCF.Web")]
        System.IAsyncResult BeginRemoveAllNews(System.AsyncCallback callback, object asyncState);
        
        void EndRemoveAllNews(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRssServiceChannel : RssWCF.RssServiceReference.IRssService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RssServiceClient : System.ServiceModel.ClientBase<RssWCF.RssServiceReference.IRssService>, RssWCF.RssServiceReference.IRssService {
        
        private BeginOperationDelegate onBeginGetFeedsDelegate;
        
        private EndOperationDelegate onEndGetFeedsDelegate;
        
        private System.Threading.SendOrPostCallback onGetFeedsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFeedDelegate;
        
        private EndOperationDelegate onEndAddFeedDelegate;
        
        private System.Threading.SendOrPostCallback onAddFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveFeedDelegate;
        
        private EndOperationDelegate onEndRemoveFeedDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchAllFeedNewsDelegate;
        
        private EndOperationDelegate onEndFetchAllFeedNewsDelegate;
        
        private System.Threading.SendOrPostCallback onFetchAllFeedNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewsDelegate;
        
        private EndOperationDelegate onEndGetNewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveNewsDelegate;
        
        private EndOperationDelegate onEndRemoveNewsDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveAllNewsDelegate;
        
        private EndOperationDelegate onEndRemoveAllNewsDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveAllNewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RssServiceClient() {
        }
        
        public RssServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RssServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RssServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RssServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Не удалось установить CookieContainer. Убедитесь, что привязка содержит HttpCooki" +
                            "eContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetFeedsCompletedEventArgs> GetFeedsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddFeedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveFeedCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> FetchAllFeedNewsCompleted;
        
        public event System.EventHandler<GetNewsCompletedEventArgs> GetNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveAllNewsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginGetFeeds(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFeeds(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> RssWCF.RssServiceReference.IRssService.EndGetFeeds(System.IAsyncResult result) {
            return base.Channel.EndGetFeeds(result);
        }
        
        private System.IAsyncResult OnBeginGetFeeds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginGetFeeds(callback, asyncState);
        }
        
        private object[] OnEndGetFeeds(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> retVal = ((RssWCF.RssServiceReference.IRssService)(this)).EndGetFeeds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFeedsCompleted(object state) {
            if ((this.GetFeedsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFeedsCompleted(this, new GetFeedsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFeedsAsync() {
            this.GetFeedsAsync(null);
        }
        
        public void GetFeedsAsync(object userState) {
            if ((this.onBeginGetFeedsDelegate == null)) {
                this.onBeginGetFeedsDelegate = new BeginOperationDelegate(this.OnBeginGetFeeds);
            }
            if ((this.onEndGetFeedsDelegate == null)) {
                this.onEndGetFeedsDelegate = new EndOperationDelegate(this.OnEndGetFeeds);
            }
            if ((this.onGetFeedsCompletedDelegate == null)) {
                this.onGetFeedsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFeedsCompleted);
            }
            base.InvokeAsync(this.onBeginGetFeedsDelegate, null, this.onEndGetFeedsDelegate, this.onGetFeedsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginAddFeed(string name, string url, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFeed(name, url, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RssWCF.RssServiceReference.IRssService.EndAddFeed(System.IAsyncResult result) {
            base.Channel.EndAddFeed(result);
        }
        
        private System.IAsyncResult OnBeginAddFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string url = ((string)(inValues[1]));
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginAddFeed(name, url, callback, asyncState);
        }
        
        private object[] OnEndAddFeed(System.IAsyncResult result) {
            ((RssWCF.RssServiceReference.IRssService)(this)).EndAddFeed(result);
            return null;
        }
        
        private void OnAddFeedCompleted(object state) {
            if ((this.AddFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFeedAsync(string name, string url) {
            this.AddFeedAsync(name, url, null);
        }
        
        public void AddFeedAsync(string name, string url, object userState) {
            if ((this.onBeginAddFeedDelegate == null)) {
                this.onBeginAddFeedDelegate = new BeginOperationDelegate(this.OnBeginAddFeed);
            }
            if ((this.onEndAddFeedDelegate == null)) {
                this.onEndAddFeedDelegate = new EndOperationDelegate(this.OnEndAddFeed);
            }
            if ((this.onAddFeedCompletedDelegate == null)) {
                this.onAddFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFeedCompleted);
            }
            base.InvokeAsync(this.onBeginAddFeedDelegate, new object[] {
                        name,
                        url}, this.onEndAddFeedDelegate, this.onAddFeedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginRemoveFeed(System.Guid feed_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveFeed(feed_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RssWCF.RssServiceReference.IRssService.EndRemoveFeed(System.IAsyncResult result) {
            base.Channel.EndRemoveFeed(result);
        }
        
        private System.IAsyncResult OnBeginRemoveFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid feed_id = ((System.Guid)(inValues[0]));
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginRemoveFeed(feed_id, callback, asyncState);
        }
        
        private object[] OnEndRemoveFeed(System.IAsyncResult result) {
            ((RssWCF.RssServiceReference.IRssService)(this)).EndRemoveFeed(result);
            return null;
        }
        
        private void OnRemoveFeedCompleted(object state) {
            if ((this.RemoveFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveFeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveFeedAsync(System.Guid feed_id) {
            this.RemoveFeedAsync(feed_id, null);
        }
        
        public void RemoveFeedAsync(System.Guid feed_id, object userState) {
            if ((this.onBeginRemoveFeedDelegate == null)) {
                this.onBeginRemoveFeedDelegate = new BeginOperationDelegate(this.OnBeginRemoveFeed);
            }
            if ((this.onEndRemoveFeedDelegate == null)) {
                this.onEndRemoveFeedDelegate = new EndOperationDelegate(this.OnEndRemoveFeed);
            }
            if ((this.onRemoveFeedCompletedDelegate == null)) {
                this.onRemoveFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveFeedCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveFeedDelegate, new object[] {
                        feed_id}, this.onEndRemoveFeedDelegate, this.onRemoveFeedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginFetchAllFeedNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchAllFeedNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RssWCF.RssServiceReference.IRssService.EndFetchAllFeedNews(System.IAsyncResult result) {
            base.Channel.EndFetchAllFeedNews(result);
        }
        
        private System.IAsyncResult OnBeginFetchAllFeedNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginFetchAllFeedNews(callback, asyncState);
        }
        
        private object[] OnEndFetchAllFeedNews(System.IAsyncResult result) {
            ((RssWCF.RssServiceReference.IRssService)(this)).EndFetchAllFeedNews(result);
            return null;
        }
        
        private void OnFetchAllFeedNewsCompleted(object state) {
            if ((this.FetchAllFeedNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchAllFeedNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchAllFeedNewsAsync() {
            this.FetchAllFeedNewsAsync(null);
        }
        
        public void FetchAllFeedNewsAsync(object userState) {
            if ((this.onBeginFetchAllFeedNewsDelegate == null)) {
                this.onBeginFetchAllFeedNewsDelegate = new BeginOperationDelegate(this.OnBeginFetchAllFeedNews);
            }
            if ((this.onEndFetchAllFeedNewsDelegate == null)) {
                this.onEndFetchAllFeedNewsDelegate = new EndOperationDelegate(this.OnEndFetchAllFeedNews);
            }
            if ((this.onFetchAllFeedNewsCompletedDelegate == null)) {
                this.onFetchAllFeedNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchAllFeedNewsCompleted);
            }
            base.InvokeAsync(this.onBeginFetchAllFeedNewsDelegate, null, this.onEndFetchAllFeedNewsDelegate, this.onFetchAllFeedNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginGetNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool RssWCF.RssServiceReference.IRssService.EndGetNews(System.IAsyncResult result) {
            return base.Channel.EndGetNews(result);
        }
        
        private System.IAsyncResult OnBeginGetNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginGetNews(callback, asyncState);
        }
        
        private object[] OnEndGetNews(System.IAsyncResult result) {
            bool retVal = ((RssWCF.RssServiceReference.IRssService)(this)).EndGetNews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewsCompleted(object state) {
            if ((this.GetNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewsAsync() {
            this.GetNewsAsync(null);
        }
        
        public void GetNewsAsync(object userState) {
            if ((this.onBeginGetNewsDelegate == null)) {
                this.onBeginGetNewsDelegate = new BeginOperationDelegate(this.OnBeginGetNews);
            }
            if ((this.onEndGetNewsDelegate == null)) {
                this.onEndGetNewsDelegate = new EndOperationDelegate(this.OnEndGetNews);
            }
            if ((this.onGetNewsCompletedDelegate == null)) {
                this.onGetNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewsDelegate, null, this.onEndGetNewsDelegate, this.onGetNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginRemoveNews(System.Guid item_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveNews(item_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RssWCF.RssServiceReference.IRssService.EndRemoveNews(System.IAsyncResult result) {
            base.Channel.EndRemoveNews(result);
        }
        
        private System.IAsyncResult OnBeginRemoveNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid item_id = ((System.Guid)(inValues[0]));
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginRemoveNews(item_id, callback, asyncState);
        }
        
        private object[] OnEndRemoveNews(System.IAsyncResult result) {
            ((RssWCF.RssServiceReference.IRssService)(this)).EndRemoveNews(result);
            return null;
        }
        
        private void OnRemoveNewsCompleted(object state) {
            if ((this.RemoveNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveNewsAsync(System.Guid item_id) {
            this.RemoveNewsAsync(item_id, null);
        }
        
        public void RemoveNewsAsync(System.Guid item_id, object userState) {
            if ((this.onBeginRemoveNewsDelegate == null)) {
                this.onBeginRemoveNewsDelegate = new BeginOperationDelegate(this.OnBeginRemoveNews);
            }
            if ((this.onEndRemoveNewsDelegate == null)) {
                this.onEndRemoveNewsDelegate = new EndOperationDelegate(this.OnEndRemoveNews);
            }
            if ((this.onRemoveNewsCompletedDelegate == null)) {
                this.onRemoveNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveNewsCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveNewsDelegate, new object[] {
                        item_id}, this.onEndRemoveNewsDelegate, this.onRemoveNewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RssWCF.RssServiceReference.IRssService.BeginRemoveAllNews(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveAllNews(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RssWCF.RssServiceReference.IRssService.EndRemoveAllNews(System.IAsyncResult result) {
            base.Channel.EndRemoveAllNews(result);
        }
        
        private System.IAsyncResult OnBeginRemoveAllNews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((RssWCF.RssServiceReference.IRssService)(this)).BeginRemoveAllNews(callback, asyncState);
        }
        
        private object[] OnEndRemoveAllNews(System.IAsyncResult result) {
            ((RssWCF.RssServiceReference.IRssService)(this)).EndRemoveAllNews(result);
            return null;
        }
        
        private void OnRemoveAllNewsCompleted(object state) {
            if ((this.RemoveAllNewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveAllNewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveAllNewsAsync() {
            this.RemoveAllNewsAsync(null);
        }
        
        public void RemoveAllNewsAsync(object userState) {
            if ((this.onBeginRemoveAllNewsDelegate == null)) {
                this.onBeginRemoveAllNewsDelegate = new BeginOperationDelegate(this.OnBeginRemoveAllNews);
            }
            if ((this.onEndRemoveAllNewsDelegate == null)) {
                this.onEndRemoveAllNewsDelegate = new EndOperationDelegate(this.OnEndRemoveAllNews);
            }
            if ((this.onRemoveAllNewsCompletedDelegate == null)) {
                this.onRemoveAllNewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveAllNewsCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveAllNewsDelegate, null, this.onEndRemoveAllNewsDelegate, this.onRemoveAllNewsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override RssWCF.RssServiceReference.IRssService CreateChannel() {
            return new RssServiceClientChannel(this);
        }
        
        private class RssServiceClientChannel : ChannelBase<RssWCF.RssServiceReference.IRssService>, RssWCF.RssServiceReference.IRssService {
            
            public RssServiceClientChannel(System.ServiceModel.ClientBase<RssWCF.RssServiceReference.IRssService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetFeeds(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFeeds", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> EndGetFeeds(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed> _result = ((System.Collections.ObjectModel.ObservableCollection<RssWCF.RssServiceReference.Feed>)(base.EndInvoke("GetFeeds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddFeed(string name, string url, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = url;
                System.IAsyncResult _result = base.BeginInvoke("AddFeed", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddFeed(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddFeed", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveFeed(System.Guid feed_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = feed_id;
                System.IAsyncResult _result = base.BeginInvoke("RemoveFeed", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveFeed(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveFeed", _args, result);
            }
            
            public System.IAsyncResult BeginFetchAllFeedNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("FetchAllFeedNews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndFetchAllFeedNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("FetchAllFeedNews", _args, result);
            }
            
            public System.IAsyncResult BeginGetNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNews", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetNews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveNews(System.Guid item_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = item_id;
                System.IAsyncResult _result = base.BeginInvoke("RemoveNews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveNews", _args, result);
            }
            
            public System.IAsyncResult BeginRemoveAllNews(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("RemoveAllNews", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRemoveAllNews(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RemoveAllNews", _args, result);
            }
        }
    }
}
